<#

    .SYNOPSIS
    Imports receive connector objects from a file

    .DESCRIPTION
    Imports receive connector objects from a CLIXML file to an Exchange server, for the purpose of migrating receive connectors.

    .PARAMETER Path
    The file path of the CLIXML file generated by Export-ReceiveConnector.

    .EXAMPLE
    PS> Import-ReceiveConnector -Path C:\Users\JSmith\Exported-Receive-Connectors.xml

#>

Function Import-ReceiveConnector {

    [CmdletBinding()]
    Param (

        [Parameter(Position=0, Mandatory=$True)]
        [ValidateScript({
            #If the specified path is a folder
            If (($_ | Test-Path -PathType Container) -eq $True) {

                Throw "Folder paths are not supported. You must specify a file path."

            }
            #If the specified path is a file
            Else {

                If (($_ | Test-Path) -eq $False) {

                    Throw "The specified file does not exist."

                }
                Else {

                    #If the specified file extension is not a .xml file
                    If ((($_ | Split-Path -Leaf).Split(".")[-1]) -ne 'xml') {

                        Throw "Specified file extension must be .xml!"

                    }
                    Else {

                        Return $True

                    }

                }

            }
        })]
        [System.IO.FileInfo]$Path

    )

    #Gather the serialized receive connector objects into a variable
    Try {
        
        Write-Host "Attempting to import the data into a temporary variable..." -ForegroundColor DarkCyan
        $ReceiveConnectors = Import-Clixml -Path $Path
    
    }
    Catch {

        Write-Error $_
        Break

    }

    Write-Host "Successfully imported the data into a temporary variable." -ForegroundColor DarkCyan

    #Check to see if the object type is a standard or deserialized receive connector object
    Write-Host "Checking the valididy of the data to ensure they are valid receive connector objects..." -ForegroundColor DarkCyan
    If (((($ReceiveConnectors)[0] | Get-Member)[0] | Select-Object -ExpandProperty TypeName) -notlike "*Microsoft.Exchange.Data.Directory.SystemConfiguration.ReceiveConnector") {

        Write-Error "The specified CLIXML file does not contain Receive Connector Objects! Please re-export and try again."
        Break

    }

    #Loop through each receive connector object and create them using New-ReceiveConnector
    ForEach ($ReceiveConnector in $ReceiveConnectors) {

        $ConnectorCreationParams = @{

            #Initial creation properties
            "TransportRole" = $ReceiveConnector.TransportRole

            #General tab of GUI properties
            "Name" = $ReceiveConnector.Name
            "Enabled" = $False
            "Comment" = $ReceiveConnector.Comment
            "ProtocolLoggingLevel" = $ReceiveConnector.ProtocolLoggingLevel
            "MaxMessageSize" = $ReceiveConnector.MaxMessageSize
            "MaxLocalHopCount" = $ReceiveConnector.MaxLocalHopCount
            "MaxHopCount" = $ReceiveConnector.MaxHopCount

            #Security tab of GUI properties
            "AuthMechanism" = $ReceiveConnector.AuthMechanism
            "PermissionGroups" = $ReceiveConnector.PermissionGroups

            #Scoping tab of GUI properties
            "RemoteIPRanges" = $ReceiveConnector.RemoteIPRanges
            "Bindings" = $ReceiveConnector.Bindings

        }

        Write-Host "Attempting to create recieve connector: $($ReceiveConnector.Name)..." -ForegroundColor DarkCyan
        Try {
        
            New-ReceiveConnector @ConnectorCreationParams

        }
        Catch {

            Write-Error $_
            Continue
            
        }

    }

}
